server.port=9093
spring.application.name=gateway-zuul
#eureka配置
eureka.node1=http://security:security@localhost:9091/eureka
eureka.node2=http://security:security@localhost:9092/eureka
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${eureka.node1},${eureka.node2}
#服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
#注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍,默认90s
#  eureka.instance.lease-expiration-duration-in-seconds=15
#服务刷新时间配置，每隔这个时间会主动心跳一次,默认30s
#  eureka.instance.lease-renewal-interval-in-seconds=5
#eureka client刷新本地缓存时间.默认30s
#  eureka.client.registryFetchIntervalSeconds=5
#eureka客户端ribbon刷新时间,默认30s
#  ribbon.ServerListRefreshInterval=5000

#zuul配置
#path=user服务匹配的映射路径,service-id=user服务对应的eureka的服务id
zuul.routes.user.path=/api/user/**
zuul.routes.user.service-id=cloud-user
zuul.routes.product.path=/api/product/**
zuul.routes.product.service-id=cloud-product
#zull-ribbon配置
cloud-user.ribbon.listOfServers=http://localhost:9091,http://localhost:9092
cloud-user.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
cloud-product.ribbon.listOfServers=http://localhost:9091,http://localhost:9092
cloud-product.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

#ribbon配置
#500*2+2000两个加起来*2不能超过timeoutInMillisecond
ribbon.ConnectionTimeout=500
ribbon.ReadTimeout=2000

#hystrix配置
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=3000
