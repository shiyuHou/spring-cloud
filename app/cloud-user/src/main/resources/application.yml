server:
  port: 8081
  servlet:
    context-path: /cloud-user

spring:
  application:
    name: cloud-user

#eureka配置
eureka:
  node1: http://security:security@localhost:9091/eureka
  node2: http://security:security@localhost:9092/eureka
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${eureka.node1},${eureka.node2}
  #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
  #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍,默认90s
#  eureka.instance.lease-expiration-duration-in-seconds=15
  #服务刷新时间配置，每隔这个时间会主动心跳一次,默认30s
#  eureka.instance.lease-renewal-interval-in-seconds=5
  #eureka client刷新本地缓存时间.默认30s
#  eureka.client.registryFetchIntervalSeconds=5
  #eureka客户端ribbon刷新时间,默认30s
#  ribbon.ServerListRefreshInterval=5000

#feign配置
feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connect-timeout: 2000
        read-timeout: 20000

#actuator配置
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    info:
      enabled: true

# ribbon配置（其他参数见com.netflix.client.config.CommonClientConfigKey）
ribbon:
  ConnectTimeout: 2000
  ReadTimeout: 10000
cloud-product:
  ribbon:
    # 配置eureka服务地址
    listOfServers: http://localhost:9091,http://localhost:9092
    # 更改轮询策略
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule